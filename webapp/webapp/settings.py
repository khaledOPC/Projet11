"""
Django settings for webapp project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from django.core.mail import send_mail
from django.core.mail import EmailMessage


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Par exemple pour Gmail
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'qaledalwalid@gmail.com'
EMAIL_HOST_PASSWORD = 'gchh oynx hshc yxvu'


sentry_sdk.init(
        dsn="https://f49d0ec93dc80793ba7e544d83dde974@o4508229866881024.ingest.de.sentry.io/4508229967282256",
        integrations=[DjangoIntegration()],
        traces_sample_rate=1.0,
        _experiments={
            "continuous_profiling_auto_start": True,
        }
)

ENV = os.getenv('ENV', 'development')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

#SECRET_KEY = "django-insecure-628i1k42^1r5z@0y(qjqi(w3-h*4*(o0%zrdjf$lj00e3ieph^"
SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-628i1k42^1r5z@0y(qjqi(w3-h*4*(o0%zrdjf$lj00e3ieph^")

# SECURITY WARNING: don't run with debug turned on in production!
if ENV == 'production':
    DEBUG = True
    ALLOWED_HOSTS = ['46.101.83.16']
else:
    DEBUG = True
    ALLOWED_HOSTS = [] #IP ou Domaine selon projet
 
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "webpage",
    "users",
    "webapp",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "webapp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR.joinpath('templates'),],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "webapp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
if ENV == 'production':
    DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql_psycopg2',
                'NAME': 'p10db',
                'USER': 'postgres',
                'PASSWORD': 'Khaledmehdi92',
                'HOST': 'localhost',
                'PORT': '5432'
                }
            }


else:
    DATABASES = {
            'default' : {
                'ENGINE' : 'django.db.backends.sqlite3',
                'NAME': BASE_DIR / "db.sqlite3",
                }
            }



#Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


LOGIN_REDIRECT_URL = 'home'

STATICFILES_FINDERS = [
        'django.contrib.staticfiles.finders.FileSystemFinder',
        'django.contrib.staticfiles.finders.AppDirectoriesFinder',
        ]

# Configuration fichier static selon prodcution ou developpement

if ENV == 'production':
    STATIC_URL = "/static/"
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
else:
    STATIC_URL = "static/"
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]







# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


'''
    import json
    json.dumps(product_data)
    print(json.dumps(product_data,indent=4))
    break
'''